{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categoriesOld","type","value","onChange","target","className","onClick","category","getGifs","typeSearch","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAaA,OACI,uBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAa,OAAKP,GAAL,mBAAmBO,OAC9CN,EAAc,MAKlB,UACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAblB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,UAarB,wBAAQG,UAAU,sDAAsDC,QAAS,kBAAMf,GAAc,SAAAgB,GAAQ,MAAI,CAAC,QAAlH,+B,+BCpBGC,EAAO,uCAAG,WAAOD,EAAUE,GAAjB,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUL,GAF7C,+DAGAM,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,wDCCPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OACI,sBAAKN,UAAU,yCAAf,UACI,qBAAKoB,IAAKd,EAAKe,IAAKL,IACpB,4BAAIA,QCJHM,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BwB,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAjBAC,qBAAU,WAENvB,EAAQD,GACHyB,MAAK,SAAAC,GAEFH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAQtB,CAACrB,IAEGsB,EDpBiBK,CAAa3B,GAA9BS,EAAP,EAAOA,KAAMY,EAAb,EAAaA,QAEb,OACI,qCACI,6BAAKrB,IAEJqB,EAAU,mBAAGvB,UAAU,mCAAb,wBAAiE,KAE5E,qBAAKA,UAAU,YAAf,SAEQW,EAAKE,KAAK,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aES5Ce,EAtBM,WAEjB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAGA,OACI,sBAAKc,UAAU,YAAf,UACI,8CACA,cAAC,EAAD,CAAad,cAAeA,IAC5B,uBAEA,6BAEQ6C,EAAWlB,KAAI,SAAAX,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCV7D8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e3018233.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue,setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }   \r\n    const handleSumbit = (e) => {\r\n        e.preventDefault()\r\n        if ( inputValue.trim().length > 0){\r\n            setCategories(categoriesOld => [inputValue,...categoriesOld])\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSumbit}>\r\n          <input type=\"text\" value={inputValue} onChange={handleInputChange}></input>\r\n          <button className=\"btn_delete animate__animated animate__bounceInRight\" onClick={() => setCategories(category => [''])}>Delete search</button>\r\n        </form>\r\n    )\r\n    \r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async( category, typeSearch ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=QwJjvIG0Hq9W5ynjYlaoq0PJ2RBhklKA`\r\n    const resp = await fetch(url)\r\n    const {data} = await resp.json()\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id : img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }      \r\n    })\r\n    return gifs\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data, loading} = useFetchGifs(category)\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading ? <p className=\"animate__animated animate__flash\">Loading...</p> : null}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    data.map( img => <GifGridItem key={img.id} {...img} />)\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true})\r\n    \r\n    useEffect(() => {\r\n        \r\n        getGifs(category)\r\n            .then(imgs =>{\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n                \r\n                   \r\n                \r\n            })\r\n\r\n\r\n    }, [category])    \r\n    \r\n    return state;\r\n}\r\n","import {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    \r\n\r\n    return(\r\n        <div className='container'>\r\n            <h2>Gif Searcher</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr /> \r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => <GifGrid key={category} category={category} />)\r\n                }\r\n            </ol>\r\n\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}